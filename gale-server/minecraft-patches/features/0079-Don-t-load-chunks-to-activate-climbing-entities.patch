From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Martijn Muijsers <martijnmuijsers@live.nl>
Date: Sun, 25 Dec 2022 19:39:38 +0100
Subject: [PATCH] Don't load chunks to activate climbing entities

License: GPL-3.0 (https://www.gnu.org/licenses/gpl-3.0.html)
Gale - https://galemc.org

diff --git a/net/minecraft/world/entity/Entity.java b/net/minecraft/world/entity/Entity.java
index ec303fb52aee7a0bc1df42a628fac24276d059de..411c3829ac99b4a3673419d230e098ff05c272f3 100644
--- a/net/minecraft/world/entity/Entity.java
+++ b/net/minecraft/world/entity/Entity.java
@@ -4679,6 +4679,16 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
         return this.inBlockState;
     }
 
+    // Gale start - don't load chunks to activate climbing entities
+    public @Nullable BlockState getInBlockStateIfLoaded() {
+        if (this.inBlockState == null) {
+            this.inBlockState = this.level.getBlockStateIfLoaded(this.blockPosition());
+        }
+
+        return this.inBlockState;
+    }
+    // Gale end - don't load chunks to activate climbing entities
+
     public ChunkPos chunkPosition() {
         return this.chunkPosition;
     }
diff --git a/net/minecraft/world/entity/LivingEntity.java b/net/minecraft/world/entity/LivingEntity.java
index d341bf76b4679470a7fb5ff081b79425e4bc1264..4e414a78a6acfb90d5e212398617580a3f34be9b 100644
--- a/net/minecraft/world/entity/LivingEntity.java
+++ b/net/minecraft/world/entity/LivingEntity.java
@@ -2032,19 +2032,43 @@ public abstract class LivingEntity extends Entity implements Attackable {
 
     public boolean onClimbableCached() {
         if (!this.blockPosition().equals(this.lastClimbingPosition)) {
-            this.cachedOnClimbable = this.onClimbable();
-            this.lastClimbingPosition = this.blockPosition();
+            // Gale start - don't load chunks to activate climbing entities
+            Boolean onClimbableIfLoaded = this.onClimbable(this.level().galeConfig().smallOptimizations.loadChunks.toActivateClimbingEntities);
+            if (onClimbableIfLoaded != null) {
+                this.cachedOnClimbable = onClimbableIfLoaded;
+                this.lastClimbingPosition = this.blockPosition();
+            } else {
+                this.cachedOnClimbable = false;
+                this.lastClimbingPosition = null;
+            }
+            // Gale end - don't load chunks to activate climbing entities
         }
         return this.cachedOnClimbable;
     }
     // Gale end - Airplane - cache on climbable check
 
     public boolean onClimbable() {
+        // Gale start - don't load chunks to activate climbing entities
+        return onClimbable(true);
+    }
+
+    public Boolean onClimbable(boolean loadChunk) {
+        // Gale end - don't load chunks to activate climbing entities
         if (this.isSpectator()) {
             return false;
         } else {
             BlockPos blockPos = this.blockPosition();
             BlockState inBlockState = this.getInBlockState();
+            // Gale start - don't load chunks to activate climbing entities
+            if (loadChunk) {
+                inBlockState = this.getInBlockState();
+            } else {
+                inBlockState = this.getInBlockStateIfLoaded();
+                if (inBlockState == null) {
+                    return null;
+                }
+            }
+            // Gale end - don't load chunks to activate climbing entities
             if (inBlockState.is(BlockTags.CLIMBABLE)) {
                 this.lastClimbablePos = Optional.of(blockPos);
                 return true;
