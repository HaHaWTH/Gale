From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Martijn Muijsers <martijnmuijsers@live.nl>
Date: Thu, 22 Dec 2022 15:47:39 +0100
Subject: [PATCH] Server thread priority environment variable

License: GPL-3.0 (https://www.gnu.org/licenses/gpl-3.0.html)
Gale - https://galemc.org

diff --git a/net/minecraft/server/MinecraftServer.java b/net/minecraft/server/MinecraftServer.java
index f33fb9b30863dd8ff7207db905fcfb7547b09383..0da1eeab6a2f8336283a62ebcb3aa0d1b1933c85 100644
--- a/net/minecraft/server/MinecraftServer.java
+++ b/net/minecraft/server/MinecraftServer.java
@@ -163,6 +163,7 @@ import net.minecraft.world.phys.Vec3;
 import org.slf4j.Logger;
 
 public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTask> implements ServerInfo, ChunkIOErrorReporter, CommandSource, ca.spottedleaf.moonrise.patches.chunk_system.server.ChunkSystemMinecraftServer { // Paper - rewrite chunk system
+    public static final int SERVER_THREAD_PRIORITY = Integer.getInteger("gale.thread.priority.server", -1); // Gale - server thread priority environment variable
     private static MinecraftServer SERVER; // Paper
     public static final Logger LOGGER = LogUtils.getLogger();
     public static final net.kyori.adventure.text.logger.slf4j.ComponentLogger COMPONENT_LOGGER = net.kyori.adventure.text.logger.slf4j.ComponentLogger.logger(LOGGER.getName()); // Paper
@@ -299,6 +300,11 @@ public abstract class MinecraftServer extends ReentrantBlockableEventLoop<TickTa
 
         S minecraftServer = (S)threadFunction.apply(thread);
         atomicReference.set(minecraftServer);
+        // Gale start - server thread priority environment variable
+        if (SERVER_THREAD_PRIORITY > 0) {
+            thread.setPriority(SERVER_THREAD_PRIORITY);
+        }
+        // Gale end - server thread priority environment variable
         thread.start();
         return minecraftServer;
     }
